PART
{
	name = TenacityRoverMast_BKI
	module = Part
	author = RoverDude
	MODEL {
		model = Tenacity/Parts/Common/RoverBody/CommonRTG
	}
	
	NODE
	{
		name = N1
		transform = N1
		size=0
		method=FIXED_JOINT
		rigid = true
	}
	NODE
	{
		name = N2
		transform = N2
		size=0
		method=FIXED_JOINT
		rigid = true
	}

	rescaleFactor = 0.625
	node_attach = 0.0, -0.110946, 0.0, 0.0, -1.0, 0.0, 0
	//node_stack_bottom = 0.0, -0.061027, 0.0, 0.0, -1.0, 0.0, 0
	stackSymmetry = 3
	TechRequired = advConstruction
	entryCost = 1000
	cost = 60
	category = Robotics
	subcategory = 0
	title = Rocker Servo Joint
	manufacturer =  #autoLOC_501649		//#autoLOC_501649 = Kerbal Motion LLC
	description = <#ef7b06>Attach to the top node on the Common Rover Body.</color> Control the roctation with the Common Rover Body.
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0
	mass = 0.06
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 1
	crashTolerance = 12
	breakingForce = 200
	breakingTorque = 200
	maxTemp = 2000 // = 5000
	bulkheadProfiles = size0
	tags = robot actuator rotate servo wheel

	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 350					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.01			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.01			//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0		//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 0			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0			//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 10000			//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 0						//Maximum amount of radiator capacity we can consume - 2500 = 1 small
		PassiveEnergy
		{
			key = 0 	25000
			key = 200 	10000
			key = 250 	50		
			key = 300	25
			key = 350	0
		}
	}
	MODULE
	{
		name = ModuleCargoPart
		stackableQuantity = 1
		packedVolume = 50
	}
}
